{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.apiUrl = 'http://localhost:8080/login';\n  }\n  onSubmit() {\n    const credentials = {\n      email: this.email,\n      password: this.password\n    };\n    const response = this.authService.login(this.email, this.password);\n    if (response.ok) {\n      this.authService.storeToken(response.token);\n      console.log(\"testin ali:\" + response.token);\n      this.router.navigate([\"/\"]);\n    } else {\n      console.error(\"Login failed\");\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 11,\n      vars: 2,\n      consts: [[3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(3, \"label\");\n          i0.ɵɵtext(4, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"label\");\n          i0.ɵɵtext(7, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["LoginComponent","constructor","authService","router","email","password","apiUrl","onSubmit","credentials","response","login","ok","storeToken","token","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_5_listener","$event","LoginComponent_Template_input_ngModelChange_8_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { lastValueFrom } from \"rxjs\";\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n \r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  private apiUrl = 'http://localhost:8080/login';\r\n  \r\n  \r\n  constructor(private authService: AuthService,private router: Router){}\r\n   \r\n   onSubmit() {\r\n    const credentials = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n    const response = this.authService.login(this.email,this.password)\r\n      if(response.ok){\r\n        this.authService.storeToken(response.token);\r\n      console.log(\"testin ali:\"+response.token)\r\n        this.router.navigate([\"/\"]);\r\n\r\n      }\r\n      else{\r\n        console.error(\"Login failed\")\r\n      }\r\n    \r\n  } \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n  \r\n \r\n\r\n\r\n  \r\n\r\n  \r\n\r\n /* onSubmit() {\r\n    const credentials = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this.http.post(this.apiUrl, credentials).subscribe({\r\n      next: () => alert('Login successful!'),\r\n      error: (err) => alert('Login failed: ' + err.error)\r\n    });\r\n  } */\r\n\r\n","<h2>Login</h2>\r\n<form (ngSubmit)=\"onSubmit()\" >\r\n  <label>Email:</label>\r\n  <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required />\r\n  <label>Password:</label>\r\n  <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required />\r\n  <button type=\"submit\">Login</button>\r\n</form>\r\n"],"mappings":";;;;AAYA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAL3D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACb,KAAAC,MAAM,GAAG,6BAA6B;EAGuB;EAEpEC,QAAQA,CAAA;IACP,MAAMC,WAAW,GAAG;MAClBJ,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,QAAQ,EAAE,IAAI,CAACA;KAChB;IACD,MAAMI,QAAQ,GAAG,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACN,KAAK,EAAC,IAAI,CAACC,QAAQ,CAAC;IAC/D,IAAGI,QAAQ,CAACE,EAAE,EAAC;MACb,IAAI,CAACT,WAAW,CAACU,UAAU,CAACH,QAAQ,CAACI,KAAK,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAAC,aAAa,GAACN,QAAQ,CAACI,KAAK,CAAC;MACvC,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAE5B,MACG;MACFF,OAAO,CAACG,KAAK,CAAC,cAAc,CAAC;;EAGnC;;;uBAxBWjB,cAAc,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAdvB,cAAc;MAAAwB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZ3BZ,EAAA,CAAAc,cAAA,SAAI;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UACdhB,EAAA,CAAAc,cAAA,cAA+B;UAAzBd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;YAAA,OAAYL,GAAA,CAAAxB,QAAA,EAAU;UAAA,EAAC;UAC3BW,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,aAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrBhB,EAAA,CAAAc,cAAA,eAAgE;UAA5Cd,EAAA,CAAAiB,UAAA,2BAAAE,uDAAAC,MAAA;YAAA,OAAAP,GAAA,CAAA3B,KAAA,GAAAkC,MAAA;UAAA,EAAmB;UAAvCpB,EAAA,CAAAgB,YAAA,EAAgE;UAChEhB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,gBAAS;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACxBhB,EAAA,CAAAc,cAAA,eAAyE;UAAlDd,EAAA,CAAAiB,UAAA,2BAAAI,uDAAAD,MAAA;YAAA,OAAAP,GAAA,CAAA1B,QAAA,GAAAiC,MAAA;UAAA,EAAsB;UAA7CpB,EAAA,CAAAgB,YAAA,EAAyE;UACzEhB,EAAA,CAAAc,cAAA,gBAAsB;UAAAd,EAAA,CAAAe,MAAA,aAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UAHhBhB,EAAA,CAAAsB,SAAA,GAAmB;UAAnBtB,EAAA,CAAAuB,UAAA,YAAAV,GAAA,CAAA3B,KAAA,CAAmB;UAEhBc,EAAA,CAAAsB,SAAA,GAAsB;UAAtBtB,EAAA,CAAAuB,UAAA,YAAAV,GAAA,CAAA1B,QAAA,CAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}