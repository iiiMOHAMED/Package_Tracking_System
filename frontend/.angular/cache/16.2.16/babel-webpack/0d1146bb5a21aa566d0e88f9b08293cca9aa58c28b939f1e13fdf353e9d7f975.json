{"ast":null,"code":"import { jwtDecode } from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../order.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction UserOrdersComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Only for Customers!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/order-details\", a1];\n};\nfunction UserOrdersComponent_div_1_table_3_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 5);\n    i0.ɵɵtext(9, \"Show Details\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r6.orderNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r6.dropOffLocation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r6.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c0, order_r6.orderNumber));\n  }\n}\nfunction UserOrdersComponent_div_1_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Order Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Dropoff Location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Action\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, UserOrdersComponent_div_1_table_3_tr_12_Template, 10, 6, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.orders);\n  }\n}\nfunction UserOrdersComponent_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No orders found for this user.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserOrdersComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"My Orders\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, UserOrdersComponent_div_1_table_3_Template, 13, 1, \"table\", 1);\n    i0.ɵɵtemplate(4, UserOrdersComponent_div_1_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.orders.length > 0)(\"ngIfElse\", _r3);\n  }\n}\nexport class UserOrdersComponent {\n  constructor( /*private route: ActivatedRoute,*/orderService, authService) {\n    this.orderService = orderService;\n    this.authService = authService;\n    this.userId = 0;\n    this.orders = [];\n    this.errorMessage = '';\n    this.role = '';\n    const token = this.authService.getToken();\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      this.userId = decodedToken.sub;\n      this.role = decodedToken.role;\n      console.log(\"test1:\" + this.userId);\n      console.log(\"test1:\" + this.role);\n    } else {\n      console.log(\"test2:\" + this.userId);\n      console.log(\"test2:\" + this.role);\n    }\n  }\n  isCus() {\n    if (this.role === \"customer\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  ngOnInit() {\n    /* Retrieve user ID from the URL parameter\n    this.userId = +this.route.snapshot.paramMap.get('id')!;\n    */\n    // Get orders for the current user\n    this.orderService.getUserOrders(this.userId).subscribe({\n      next: data => {\n        this.orders = data; // Successfully received orders\n      },\n\n      error: error => {\n        this.errorMessage = 'There was an error retrieving orders.'; // Handle error\n        console.error(error); // Log the error for debugging\n      },\n\n      complete: () => {\n        console.log('User orders fetch complete'); // Optionally log completion\n      }\n    });\n  }\n\n  static {\n    this.ɵfac = function UserOrdersComponent_Factory(t) {\n      return new (t || UserOrdersComponent)(i0.ɵɵdirectiveInject(i1.OrderService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserOrdersComponent,\n      selectors: [[\"app-user-orders\"]],\n      decls: 2,\n      vars: 2,\n      consts: [[4, \"ngIf\"], [\"border\", \"2\", 4, \"ngIf\", \"ngIfElse\"], [\"noOrders\", \"\"], [\"border\", \"2\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n      template: function UserOrdersComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, UserOrdersComponent_div_0_Template, 3, 0, \"div\", 0);\n          i0.ɵɵtemplate(1, UserOrdersComponent_div_1_Template, 6, 2, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.isCus());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isCus());\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["jwtDecode","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","order_r6","orderNumber","dropOffLocation","status","ɵɵproperty","ɵɵpureFunction1","_c0","ɵɵtemplate","UserOrdersComponent_div_1_table_3_tr_12_Template","ctx_r2","orders","UserOrdersComponent_div_1_table_3_Template","UserOrdersComponent_div_1_ng_template_4_Template","ɵɵtemplateRefExtractor","ctx_r1","length","_r3","UserOrdersComponent","constructor","orderService","authService","userId","errorMessage","role","token","getToken","decodedToken","sub","console","log","isCus","ngOnInit","getUserOrders","subscribe","next","data","error","complete","ɵɵdirectiveInject","i1","OrderService","i2","AuthService","selectors","decls","vars","consts","template","UserOrdersComponent_Template","rf","ctx","UserOrdersComponent_div_0_Template","UserOrdersComponent_div_1_Template"],"sources":["C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\user-orders\\user-orders.component.ts","C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\user-orders\\user-orders.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderService } from '../order.service';\r\nimport { AuthService } from '../auth.service';\r\nimport { jwtDecode } from \"jwt-decode\";\r\n@Component({\r\n  selector: 'app-user-orders',\r\n  templateUrl: './user-orders.component.html',\r\n  styleUrls: ['./user-orders.component.css']\r\n})\r\nexport class UserOrdersComponent implements OnInit {\r\n  userId: number= 0;\r\n  orders: any[] = [];\r\n  errorMessage: string = '';\r\n  role:string='';\r\n  constructor(\r\n    /*private route: ActivatedRoute,*/ private orderService: OrderService,private authService: AuthService) {\r\n      const token = this.authService.getToken();\r\n    if (token) {\r\n      const decodedToken: any = jwtDecode(token);\r\n      this.userId = decodedToken.sub; \r\n      this.role=decodedToken.role;\r\n      console.log(\"test1:\"+this.userId)\r\n      console.log(\"test1:\"+this.role)\r\n    }\r\n    else{ \r\n      console.log(\"test2:\"+this.userId)\r\n      console.log(\"test2:\"+this.role)\r\n    }\r\n    }\r\n    isCus(){\r\n      if(this.role===\"customer\"){\r\n        return true;\r\n      }\r\n      else{\r\n        return false;\r\n      }\r\n  \r\n    }\r\n\r\n  ngOnInit(): void {\r\n    /* Retrieve user ID from the URL parameter\r\n    this.userId = +this.route.snapshot.paramMap.get('id')!;\r\n    */\r\n    \r\n    \r\n    // Get orders for the current user\r\n    this.orderService.getUserOrders(this.userId).subscribe({\r\n      next: (data) => {\r\n        this.orders = data; // Successfully received orders\r\n      },\r\n      error: (error) => {\r\n        this.errorMessage = 'There was an error retrieving orders.'; // Handle error\r\n        console.error(error); // Log the error for debugging\r\n      },\r\n      complete: () => {\r\n        console.log('User orders fetch complete'); // Optionally log completion\r\n      }\r\n    });\r\n  }\r\n}\r\n//activated route w el snapshot l fo2 knt hst5dmm lw knt b5ly l id yt7t fil path men abl l 5atwa de fa hwa ye retrieve it mel url\r\n//lw kan mktoob msln /orders/users/2 fa kan haya5od l 2\r\n","<div *ngIf=\"!isCus()\">\r\n  <h2>Only for Customers!</h2>\r\n</div>\r\n<div *ngIf=\"isCus()\">\r\n<h2>My Orders</h2>\r\n<table border=\"2\" *ngIf=\"orders.length > 0; else noOrders\">\r\n  <thead>\r\n    <tr>\r\n      <th>Order Number</th>\r\n       <!--<th>Pickup Location</th>-->\r\n      <th>Dropoff Location</th>\r\n       <!--<th>Package Details</th>-->\r\n         <!--<th>Delivery Time</th>-->\r\n      <th>Status</th>\r\n      <th>Action</th> \r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let order of orders\">\r\n      <td>{{ order.orderNumber }}</td>\r\n         <!--<td>{{ order.pickupLocation }}</td>-->\r\n      <td>{{ order.dropOffLocation }}</td>  \r\n         <!--<td>{{ order.packageDetails }}</td>-->\r\n          <!--<td>{{ order.deliveryTime }}</td> -->\r\n      <td>{{ order.status }}</td>\r\n      <td>\r\n        <!-- Button to navigate to the order details page -->\r\n        <button [routerLink]=\"['/order-details', order.orderNumber]\">Show Details</button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<ng-template #noOrders>\r\n  <p>No orders found for this user.</p>\r\n</ng-template>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}