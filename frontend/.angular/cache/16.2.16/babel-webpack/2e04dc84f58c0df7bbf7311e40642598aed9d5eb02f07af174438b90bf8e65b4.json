{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/imoha/Desktop/Package_Tracking_System/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport { lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(authService, fb, router) {\n    this.authService = authService;\n    this.fb = fb;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.apiUrl = 'http://localhost:8080/login';\n    this.loginForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onLogin() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.loginForm.valid) {\n        try {\n          const response = yield lastValueFrom(_this.authService.login(_this.loginForm.value.email, _this.loginForm.value.password));\n          _this.authService.storeToken(response.access_token);\n          console.log(\"testin ali:\" + response.access_token);\n          _this.router.navigate([\"/\"]);\n        } catch (err) {\n          console.error(\"Login failed\", err);\n        }\n      } else {\n        console.log(\"Form is invalid\");\n      }\n    })();\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 11,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵelementStart(3, \"label\");\n          i0.ɵɵtext(4, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.email = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"label\");\n          i0.ɵɵtext(7, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.password = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.email);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.password);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","lastValueFrom","LoginComponent","constructor","authService","fb","router","email","password","apiUrl","loginForm","group","required","minLength","onLogin","_this","_asyncToGenerator","valid","response","login","value","storeToken","access_token","console","log","navigate","err","error","i0","ɵɵdirectiveInject","i1","AuthService","i2","FormBuilder","i3","Router","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","LoginComponent_Template_input_ngModelChange_5_listener","$event","LoginComponent_Template_input_ngModelChange_8_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { lastValueFrom } from \"rxjs\";\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule]\r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  private apiUrl = 'http://localhost:8080/login';\r\n  loginForm: FormGroup;\r\n  \r\n  constructor(private authService: AuthService,private fb: FormBuilder,private router: Router)\r\n  {\r\n    this.loginForm = this.fb.group({\r\n    email: [\"\", [Validators.required, Validators.email]],\r\n    password: [\"\", [Validators.required, Validators.minLength(6)]],\r\n  });\r\n}\r\n  \r\n  async onLogin() {\r\n    if (this.loginForm.valid) {\r\n      try {\r\n        const response = await lastValueFrom(\r\n          this.authService.login(\r\n            this.loginForm.value.email,\r\n            this.loginForm.value.password\r\n          )\r\n        );\r\n        \r\n        this.authService.storeToken(response.access_token);\r\n        console.log(\"testin ali:\"+response.access_token)\r\n        this.router.navigate([\"/\"]);\r\n      } catch (err) {\r\n        console.error(\"Login failed\", err);\r\n        \r\n      }\r\n    } else {\r\n      console.log(\"Form is invalid\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n \r\n  }\r\n  \r\n\r\n /* onSubmit() {\r\n    const credentials = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this.http.post(this.apiUrl, credentials).subscribe({\r\n      next: () => alert('Login successful!'),\r\n      error: (err) => alert('Login failed: ' + err.error)\r\n    });\r\n  } */\r\n\r\n","<h2>Login</h2>\r\n<form (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\r\n  <label>Email:</label>\r\n  <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required />\r\n  <label>Password:</label>\r\n  <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required />\r\n  <button type=\"submit\">Login</button>\r\n</form>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}