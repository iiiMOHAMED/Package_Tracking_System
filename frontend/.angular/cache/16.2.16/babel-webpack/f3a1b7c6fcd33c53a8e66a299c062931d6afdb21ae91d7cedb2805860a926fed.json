{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CourierService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080'; // Replace with your backend URL\n  }\n\n  getCourierOrders(userId) {\n    return this.http.get(`${this.apiUrl}/orders/couriers/${userId}`);\n  }\n  acceptOrder(orderId) {\n    // Updates status to 'picked up' for the accepted order\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/accept`, {});\n  }\n  yesOrder(orderId) {\n    // Updates status to 'picked up' for the accepted order\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/yes`, {});\n  }\n  declineOrder(orderId) {\n    // Sets courier_id to null and status to 'pending' for the declined order\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/decline`, {});\n  }\n  static {\n    this.ɵfac = function CourierService_Factory(t) {\n      return new (t || CourierService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CourierService,\n      factory: CourierService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["CourierService","constructor","http","apiUrl","getCourierOrders","userId","get","acceptOrder","orderId","put","yesOrder","declineOrder","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\courier.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CourierService {\r\n  private apiUrl = 'http://localhost:8080'; // Replace with your backend URL\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCourierOrders(userId: number): Observable<any[]> {\r\n    return this.http.get<any[]>(`${this.apiUrl}/orders/couriers/${userId}`);\r\n  }\r\n\r\n  acceptOrder(orderId: number): Observable<any> {\r\n    // Updates status to 'picked up' for the accepted order\r\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/accept`, {});\r\n  }\r\n  yesOrder(orderId: number): Observable<any> {\r\n    // Updates status to 'picked up' for the accepted order\r\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/yes`, {});\r\n  }\r\n  \r\n  declineOrder(orderId: number): Observable<any> {\r\n    // Sets courier_id to null and status to 'pending' for the declined order\r\n    return this.http.put(`${this.apiUrl}/orders/${orderId}/decline`, {});\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEH;;EAEvCC,gBAAgBA,CAACC,MAAc;IAC7B,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAQ,GAAG,IAAI,CAACH,MAAM,oBAAoBE,MAAM,EAAE,CAAC;EACzE;EAEAE,WAAWA,CAACC,OAAe;IACzB;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,WAAWK,OAAO,SAAS,EAAE,EAAE,CAAC;EACrE;EACAE,QAAQA,CAACF,OAAe;IACtB;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,WAAWK,OAAO,MAAM,EAAE,EAAE,CAAC;EAClE;EAEAG,YAAYA,CAACH,OAAe;IAC1B;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,WAAWK,OAAO,UAAU,EAAE,EAAE,CAAC;EACtE;;;uBArBWR,cAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdf,cAAc;MAAAgB,OAAA,EAAdhB,cAAc,CAAAiB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}