{"ast":null,"code":"import { lastValueFrom } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.apiUrl = 'http://localhost:8080/login';\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 11,\n      vars: 1,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"email\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\"], [\"formControlName\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onLogin();\n          });\n          i0.ɵɵelementStart(3, \"label\");\n          i0.ɵɵtext(4, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 1);\n          i0.ɵɵelementStart(6, \"label\");\n          i0.ɵɵtext(7, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"input\", 2);\n          i0.ɵɵelementStart(9, \"button\", 3);\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n      encapsulation: 2\n    });\n  }\n}\nasync;\nonLogin();\n{\n  try {\n    const response = await lastValueFrom(this.authService.login(this.email, this.password));\n    if (response.ok) {\n      this.authService.storeToken(response.token);\n      console.log(\"testin ali:\" + response.token);\n      this.router.navigate([\"/\"]);\n    }\n  } catch (err) {\n    console.error(\"Login failed\", err);\n  }\n}","map":{"version":3,"names":["lastValueFrom","LoginComponent","constructor","authService","router","email","password","apiUrl","i0","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","onLogin","ɵɵelement","ɵɵadvance","ɵɵproperty","loginForm","async","response","login","ok","storeToken","token","console","log","navigate","err","error"],"sources":["C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\imoha\\Desktop\\Package_Tracking_System\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AuthService } from 'src/app/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { lastValueFrom } from \"rxjs\";\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n \r\n})\r\nexport class LoginComponent {\r\n  email: string = '';\r\n  password: string = '';\r\n  private apiUrl = 'http://localhost:8080/login';\r\n  \r\n  \r\n  constructor(private authService: AuthService,private router: Router){}\r\n    \r\n}\r\n  \r\n  async onLogin() {\r\n    \r\n      try {\r\n        const response = await lastValueFrom(\r\n          this.authService.login(\r\n            this.email,\r\n            this.password\r\n          )\r\n        );\r\n        if(response.ok){\r\n          this.authService.storeToken(response.token);\r\n          console.log(\"testin ali:\"+response.token)\r\n          this.router.navigate([\"/\"]);\r\n\r\n        }\r\n       \r\n        \r\n      } catch (err) {\r\n        console.error(\"Login failed\", err);\r\n        \r\n      }\r\n\r\n\r\n    } \r\n  \r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n /* onSubmit() {\r\n    const credentials = {\r\n      email: this.email,\r\n      password: this.password,\r\n    };\r\n\r\n    this.http.post(this.apiUrl, credentials).subscribe({\r\n      next: () => alert('Login successful!'),\r\n      error: (err) => alert('Login failed: ' + err.error)\r\n    });\r\n  } */\r\n\r\n","<h2>Login</h2>\r\n<form (ngSubmit)=\"onLogin()\" [formGroup]=\"loginForm\">\r\n  <label>Email:</label>\r\n  <input formControlName=\"email\" type=\"email\"  name=\"email\" required />\r\n  <label>Password:</label>\r\n  <input formControlName=\"password\" type=\"password\"  name=\"password\" required />\r\n  <button type=\"submit\">Login</button>\r\n</form>\r\n"],"mappings":"AAMA,SAASA,aAAa,QAAQ,MAAM;;;;;AAMpC,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,WAAwB,EAASC,MAAc;IAA/C,KAAAD,WAAW,GAAXA,WAAW;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAL3D,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACb,KAAAC,MAAM,GAAG,6BAA6B;EAGuB;;;uBAN1DN,cAAc,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAdZ,cAAc;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZ3BZ,EAAA,CAAAc,cAAA,SAAI;UAAAd,EAAA,CAAAe,MAAA,YAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAK;UACdhB,EAAA,CAAAc,cAAA,cAAqD;UAA/Cd,EAAA,CAAAiB,UAAA,sBAAAC,iDAAA;YAAA,OAAYL,GAAA,CAAAM,OAAA,EAAS;UAAA,EAAC;UAC1BnB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,aAAM;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACrBhB,EAAA,CAAAoB,SAAA,eAAqE;UACrEpB,EAAA,CAAAc,cAAA,YAAO;UAAAd,EAAA,CAAAe,MAAA,gBAAS;UAAAf,EAAA,CAAAgB,YAAA,EAAQ;UACxBhB,EAAA,CAAAoB,SAAA,eAA8E;UAC9EpB,EAAA,CAAAc,cAAA,gBAAsB;UAAAd,EAAA,CAAAe,MAAA,aAAK;UAAAf,EAAA,CAAAgB,YAAA,EAAS;;;UALThB,EAAA,CAAAqB,SAAA,GAAuB;UAAvBrB,EAAA,CAAAsB,UAAA,cAAAT,GAAA,CAAAU,SAAA,CAAuB;;;;;;;;ADqBlDC,KAAK;AAACL,OAAO,EAAE;AAAC;EAEZ,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMjC,aAAa,CAClC,IAAI,CAACG,WAAW,CAAC+B,KAAK,CACpB,IAAI,CAAC7B,KAAK,EACV,IAAI,CAACC,QAAQ,CACd,CACF;IACD,IAAG2B,QAAQ,CAACE,EAAE,EAAC;MACb,IAAI,CAAChC,WAAW,CAACiC,UAAU,CAACH,QAAQ,CAACI,KAAK,CAAC;MAC3CC,OAAO,CAACC,GAAG,CAAC,aAAa,GAACN,QAAQ,CAACI,KAAK,CAAC;MACzC,IAAI,CAACjC,MAAM,CAACoC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;GAK9B,CAAC,OAAOC,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}